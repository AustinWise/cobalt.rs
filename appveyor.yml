# This is based on https://github.com/rust-lang-nursery/rustfmt/blob/master/appveyor.yml
# which is in turn based on https://github.com/japaric/rust-everywhere/blob/master/appveyor.yml

environment:
  global:
    PROJECT_NAME: cobalt.rs
  matrix:
    # Stable channel
    - TARGET: x86_64-pc-windows-gnu
      CHANNEL: stable
      BITS: 64
    - TARGET: i686-pc-windows-msvc
      CHANNEL: stable
      BITS: 32
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: stable
      BITS: 64
    # Beta channel
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: beta
      BITS: 64
    # Nightly channel
    - TARGET: x86_64-pc-windows-msvc
      CHANNEL: nightly
      BITS: 64

# Install Rust and Cargo
# (Based on from https://github.com/rust-lang/libc/blob/master/appveyor.yml)
install:
  - ps: Start-FileDownload "http://slproweb.com/download/Win${env:BITS}OpenSSL-1_0_2h.exe"
  - Win%BITS%OpenSSL-1_0_2h.exe /SILENT /VERYSILENT /SP- /DIR="C:\OpenSSL"
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/channel-rust-stable"
  - ps: $env:RUST_VERSION = Get-Content channel-rust-stable | select -first 1 | %{$_.split('-')[1]}
  - if NOT "%CHANNEL%" == "stable" set RUST_VERSION=%CHANNEL%
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:RUST_VERSION}-${env:TARGET}.exe"
  - rust-%RUST_VERSION%-%TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - SET PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - if "%TARGET%" == "i686-pc-windows-gnu" set PATH=%PATH%;C:\msys64\mingw32\bin
  - if "%TARGET%" == "x86_64-pc-windows-gnu" set PATH=%PATH%;C:\msys64\mingw64\bin
  - rustc -V
  - cargo -V

# ???
build: false

# Build and test
test_script:
  - cargo build --verbose
  - cargo test

